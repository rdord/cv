@charset "UTF-8";
/*@import url(/bower_components/normalize-css/normalize.css);*/
@import url("https://fonts.googleapis.com/css?family=Playfair+Display:400,400i,700,700i,900,900i|Abril+Fatface|Open+Sans:400,600,700,800");
.u-holder {
  position: relative;
}

.u-holder > .u-title {
  padding-left: 2px;
  font-family: 'Playfair Display', sans-serif;
  letter-spacing: 0.07em;
  font-size: 20px;
  font-weight: 400;
  top: -4px;
  background: transparent;
}

.u-title {
  margin: 0;
  line-height: 1.3;
  text-transform: uppercase;
  font-family: 'Open Sans', sans-serif;
  font-weight: 600;
  font-size: 11px;
  letter-spacing: 0.03em;
  display: inline-block;
  position: relative;
  padding: 0 1px;
}

@media (min-width: 480px) {
  .u-2col {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 30px;
            column-gap: 30px;
  }
}

.u-nosplit {
  display: inline-block;
}

.u-width1 {
  width: 69px;
}

.u-width2 {
  width: 101px;
}

.u-width3 {
  width: 59px;
}

.u-width4 {
  width: 88px;
}

.u-width5 {
  width: 70px;
}

.u-width6 {
  width: 116px;
}

.u-width7 {
  width: 62px;
}

.u-width8 {
  width: 54px;
}

.u-width9 {
  width: 85px;
}

body {
  font-family: 'Open Sans',  'Helvetica Neue', Helvetica, Arial, sans-serif;
  color: rgba(0, 0, 0, 0.87);
  margin: 0;
  background-color: #fff;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  position: relative;
  counter-reset: company;
  padding: 49px 12px 0;
  overflow-x: hidden;
}

@media (min-width: 1530px) {
  body {
    padding: 91px 40px 0;
  }
}

@media (min-width: 1886px) {
  body {
    overflow-x: hidden;
    padding-top: 87px;
  }
  body > div:not(.ro-Grid--rows),
  body > section {
    max-width: 1823px;
    margin: 0 auto;
  }
}

a, a:focus, a:active {
  color: rgba(26, 13, 171, 0.87);
  text-decoration: none;
  outline: 0;
  border-bottom: 1px solid;
}

@media (min-width: 1886px) {
  a, a:focus, a:active {
    border-bottom: none;
  }
}

a:hover {
  color: #1a0dab;
}

.is-scrolling .ro-Work-company {
  opacity: 0.18;
}

.ro-Hero-header {
  max-width: 288px;
}

@media (min-width: 480px) {
  .ro-Hero-header {
    max-width: none;
  }
}

@-webkit-keyframes moveIn {
  from {
    -webkit-transform: translateY(0px);
            transform: translateY(0px);
  }
  to {
    -webkit-transform: translateY(3px);
            transform: translateY(3px);
  }
}

@keyframes moveIn {
  from {
    -webkit-transform: translateY(0px);
            transform: translateY(0px);
  }
  to {
    -webkit-transform: translateY(3px);
            transform: translateY(3px);
  }
}

.ro-Hero-title {
  top: -37px;
  text-transform: none;
  color: #FF91AF;
}

.ro-Hero-heading {
  font-family: 'Abril Fatface', cursive;
  font-size: 57px;
  letter-spacing: 0.01em;
  font-weight: 400;
  margin: 0;
  line-height: 53px;
  padding-bottom: 2px;
}

@media (min-width: 480px) {
  .ro-Hero-heading {
    padding-bottom: 0;
  }
}

@media (min-width: 1886px) {
  .ro-Hero-heading {
    line-height: 1.1;
  }
}

.ro-Hero-subheading {
  font-family: 'Playfair Display', sans-serif;
  font-size: 16px;
  margin: 3px 4px;
  font-weight: 400;
  font-style: italic;
  letter-spacing: -0.03em;
  line-height: 28px;
  padding-right: 10px;
  display: inline-block;
}

@media (min-width: 1886px) {
  .ro-Hero-subheading {
    line-height: 1.5;
    padding-right: 0;
    display: inline;
  }
}

@-webkit-keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.ro-Hero-links {
  font-size: 12px;
  font-weight: 600;
  padding-left: 3px;
  margin-top: 6px;
  word-spacing: 5px;
}

.ro-Hero-links.is-animated {
  opacity: 0;
  -webkit-animation: fadeIn 2.4s;
          animation: fadeIn 2.4s;
  -webkit-animation-delay: .7s;
          animation-delay: .7s;
  -webkit-animation-fill-mode: forwards;
          animation-fill-mode: forwards;
}

@media (min-width: 480px) {
  .ro-Hero-links {
    margin-top: 4px;
  }
}

@media (min-width: 1886px) {
  .ro-Hero-links {
    margin-top: 9px;
    word-spacing: normal;
  }
}

@media (min-width: 1280px) {
  .ro-Hero--availability {
    display: inline-block;
    position: absolute;
    color: rgba(26, 13, 171, 0.87);
    left: 180px !important;
    top: 184px !important;
  }
  .ro-Hero--availability.is-animated {
    opacity: 0;
    -webkit-animation: fadeIn 2.4s;
            animation: fadeIn 2.4s;
    -webkit-animation-delay: .7s;
            animation-delay: .7s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
  }
}

.ro-Hero--availability .ro-Hero-header {
  margin: 0;
  display: none;
}

@media (min-width: 1280px) {
  .ro-Hero--availability .ro-Hero-header {
    display: block;
    position: relative;
    z-index: -1;
  }
}

.ro-Hero--availability .ro-Hero-heading {
  text-transform: uppercase;
}

.ro-Hero--availability .ro-Hero-links {
  z-index: 1;
}

.ro-Xp-body {
  padding: 23px 0 18px 3px;
}

@media (min-width: 375px) {
  .ro-Xp-body {
    padding-right: 3px;
  }
}

@media (min-width: 480px) {
  .ro-Xp-body {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 14px;
            column-gap: 14px;
    max-width: 718px;
    padding: 24px 0 32px 3px;
  }
}

@media (min-width: 753px) {
  .ro-Xp-body {
    max-width: 710px;
    -webkit-column-gap: 30px;
            column-gap: 30px;
  }
}

@media (min-width: 1280px) {
  .ro-Xp-body {
    max-width: 720px;
    display: inline-block;
    position: relative;
    z-index: 1;
  }
}

.ro-Xp-body p {
  margin: 0;
  line-height: 2;
  font-size: 14px;
  padding-bottom: 14px;
}

@media (min-width: 480px) {
  .ro-Xp-body p {
    padding-bottom: 0;
  }
}

.ro-Xp-links {
  padding-left: 0;
  margin-top: 7px;
  -webkit-animation-delay: 1.2s;
          animation-delay: 1.2s;
}

.ro-Work {
  padding-bottom: 30px;
}

@media (min-width: 1280px) {
  .ro-Work {
    z-index: 1;
  }
}

@media (min-width: 1886px) {
  .ro-Work {
    padding-bottom: 44px;
  }
}

.ro-Work-body {
  padding-left: 3px;
}

@media (min-width: 1886px) {
  .ro-Work-body {
    padding-left: 15px;
  }
}

@media (min-width: 480px) {
  .ro-Work-content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
  }
}

@media (min-width: 753px) {
  .ro-Work-content {
    min-width: 740px;
  }
}

@media (min-width: 1886px) {
  .ro-Work-content {
    margin: 0 -12px;
    position: relative;
  }
}

.ro-Work-item {
  line-height: 1.9;
  font-size: 14px;
  padding: 19px 0 2px;
}

@media (min-width: 480px) {
  .ro-Work-item.u-2items,
  .ro-Work-item:not(.u-2items) .ro-Work-companyContent {
    -webkit-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 14px;
            column-gap: 14px;
  }
}

@media (min-width: 753px) {
  .ro-Work-item {
    -webkit-box-flex: 0;
        -ms-flex: 0 0 340px;
            flex: 0 0 340px;
    padding-right: 30px;
  }
  .ro-Work-item, .ro-Work-item.u-2items,
  .ro-Work-item:not(.u-2items) .ro-Work-companyContent {
    -webkit-column-gap: 30px;
            column-gap: 30px;
  }
  .ro-Work-item.is-doubleWidth {
    -ms-flex-preferred-size: 710px;
        flex-basis: 710px;
  }
  .ro-Work-item.u-2items,
  .ro-Work-item:not(.u-2items) .ro-Work-companyContent:not(.u-2col) {
    -webkit-column-count: auto;
            column-count: auto;
  }
}

@media (min-width: 1563px) {
  .ro-Work-item:last-child {
    -ms-flex-preferred-size: 710px;
        flex-basis: 710px;
  }
}

@media (min-width: 1886px) {
  .ro-Work-item {
    padding-top: 21px;
    -webkit-column-gap: 30px;
            column-gap: 30px;
  }
  .ro-Work-item:nth-last-child(2) {
    padding-right: 0;
  }
  .ro-Work-item.is-doubleWidth {
    -webkit-box-flex: 0;
        -ms-flex: none;
            flex: none;
    width: 710px;
  }
  .ro-Work-item.is-doubleWidth .ro-Work-companyContent:not(.u-2col) p {
    max-width: 710px;
  }
}

.ro-Work-item p,
.ro-Work-item .ro-Work-company {
  margin: 0;
}

@media (min-width: 480px) {
  .ro-Work-item p,
  .ro-Work-item .ro-Work-company {
    max-width: 710px;
    -webkit-column-gap: 30px;
            column-gap: 30px;
  }
}

@media (min-width: 1886px) {
  .ro-Work-item p,
  .ro-Work-item .ro-Work-company {
    max-width: 340px;
    -webkit-column-count: auto;
            column-count: auto;
  }
}

.ro-Work-itemHeader {
  padding-bottom: 7px;
  max-width: 330px;
}

@media (min-width: 480px) {
  .ro-Work-itemHeader {
    max-width: 220px;
  }
}

@media (min-width: 1886px) {
  .ro-Work-itemHeader {
    max-width: none;
  }
}

.ro-Work-itemHeader ~ .ro-Work-itemHeader {
  padding-top: 21px;
}

@media (min-width: 480px) {
  .ro-Work-itemHeader ~ .ro-Work-itemHeader {
    padding-top: 0;
  }
}

@media (min-width: 753px) {
  .ro-Work-itemHeader ~ .ro-Work-itemHeader {
    padding-top: 7px;
  }
}

@media (min-width: 1886px) {
  .ro-Work-itemHeader ~ .ro-Work-itemHeader {
    padding-top: 9px;
  }
}

.ro-Work-company {
  display: none;
}

@media (min-width: 1886px) {
  .ro-Work-company {
    display: inline-block;
    font-family: 'Playfair Display', sans-serif;
    font-size: 12px;
    font-weight: 400;
    position: relative;
    bottom: 13px;
    height: 1px;
    margin: 2px 0 14px;
    padding: 0 8px;
    transition: opacity .2s;
    letter-spacing: .07em;
    text-transform: uppercase;
    opacity: .3;
    color: #fff;
    background-color: rgba(26, 13, 171, 0.87);
  }
}

.ro-Work-company:before {
  position: absolute;
  top: -12px;
  left: 2px;
  content: 'protected';
  text-transform: uppercase;
  font-size: 14px;
}

.ro-Work-companyType {
  margin: 3px 4px;
  line-height: 1.3;
  text-transform: uppercase;
  font-family: 'Open Sans', sans-serif;
  font-weight: 600;
  font-size: 11px;
  letter-spacing: 0.03em;
  position: relative;
  counter-increment: company;
  margin: 0;
}

@media (min-width: 480px) {
  .ro-Work-companyType {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
  }
}

@media (min-width: 1886px) {
  .ro-Work-companyType {
    max-width: 340px;
  }
  .ro-Work-companyType:before {
    content: counter(company);
    padding-right: 15px;
  }
  .ro-Work-companyType:after {
    content: '○';
    position: absolute;
    font-size: 38px;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    left: -8px;
    margin-top: -4px;
  }
}

.ro-Work-companyLocation {
  display: none;
}

@media (min-width: 375px) {
  .ro-Work-companyLocation {
    display: inline;
  }
}

@media (min-width: 480px) {
  .ro-Work-companyLocation {
    display: none;
  }
}

@media (min-width: 1886px) {
  .ro-Work-companyLocation {
    display: inline;
  }
}

.ro-Work-companyContent {
  line-height: 2;
}

@media (min-width: 1886px) {
  .ro-Work-companyContent.u-2col {
    -webkit-column-gap: 2px;
            column-gap: 2px;
  }
}

.ro-Tools-list {
  list-style: none;
  font-size: 12px;
  font-weight: 600;
  padding-left: 4px;
  padding-bottom: 23px;
  -webkit-column-count: 3;
          column-count: 3;
  margin: 12px 0 8px;
}

@media (min-width: 480px) {
  .ro-Tools-list {
    -webkit-column-count: 4;
            column-count: 4;
  }
}

@media (min-width: 753px) {
  .ro-Tools-list {
    -webkit-column-count: 6;
            column-count: 6;
    -webkit-column-gap: 30px;
            column-gap: 30px;
    width: 705px;
  }
}

@media (min-width: 1137px) {
  .ro-Tools-list {
    width: 949px;
    -webkit-column-count: 8;
            column-count: 8;
  }
}

@media (min-width: 1590px) {
  .ro-Tools-list {
    width: 1444px;
    -webkit-column-count: 12;
            column-count: 12;
  }
}

@media (min-width: 1910px) {
  .ro-Tools-list {
    width: auto;
    margin-top: 26px;
    -webkit-column-count: 15;
            column-count: 15;
  }
}

.ro-Tools-list li {
  line-height: 2.4;
  white-space: nowrap;
}

.ro-Tools-list abbr {
  text-decoration: none;
}

@media (min-width: 1886px) {
  .ro-Tools-list abbr:after {
    content: attr(title);
  }
  .ro-Tools-list abbr span {
    display: none;
  }
}

.ro-Tools-emptyItem {
  display: none;
}

@media (min-width: 1910px) {
  .ro-Tools-emptyItem {
    display: list-item;
  }
}

@-webkit-keyframes moveInShapes {
  from {
    -webkit-transform: translateY(0px);
            transform: translateY(0px);
  }
  to {
    -webkit-transform: translateY(50px);
            transform: translateY(50px);
  }
}

@keyframes moveInShapes {
  from {
    -webkit-transform: translateY(0px);
            transform: translateY(0px);
  }
  to {
    -webkit-transform: translateY(50px);
            transform: translateY(50px);
  }
}

.ro-Visual {
  padding-bottom: 20px;
}

@media (min-width: 1280px) {
  .ro-Visual {
    top: -30px !important;
    left: 703px !important;
    width: 716px;
    height: 716px;
    position: absolute;
    -webkit-animation: moveInShapes 2.4s;
            animation: moveInShapes 2.4s;
    -webkit-animation-fill-mode: forwards;
            animation-fill-mode: forwards;
    padding-bottom: 0;
  }
  .ro-Visual [class^='ro-Visual-shape'] {
    position: absolute !important;
    border-radius: 50%;
  }
}

@media (min-width: 1530px) {
  .ro-Visual {
    left: 963px !important;
  }
}

@media (min-width: 1280px) {
  .ro-Visual-heading {
    display: none;
  }
}

@media (min-width: 1280px) {
  .ro-Visual-shape1 {
    width: 716px;
    height: 716px;
    left: 0 !important;
    top: 0 !important;
    background: #FF91AF;
    z-index: -2;
    -webkit-filter: blur(2px);
            filter: blur(2px);
  }
}

@media (min-width: 1280px) {
  .ro-Visual-shapeBorder {
    -webkit-filter: hue-rotate(10deg);
            filter: hue-rotate(10deg);
  }
}

.ro-Visual-contact {
  padding-top: 1px;
  display: inline-block;
  position: relative;
}

.ro-Visual-contact:before {
  content: attr(data-clipboard-text);
}

.ro-Visual-contact:after {
  content: '';
  position: absolute;
  top: -100px;
  right: -100px;
  bottom: -100px;
  left: -100px;
  z-index: -1;
}

.ro-Visual-contact span {
  display: none;
}

@media (min-width: 1280px) {
  .ro-Visual-contact {
    padding-top: 0;
  }
  .ro-Visual-contact:before {
    display: none;
  }
  .ro-Visual-contact span {
    display: inline;
  }
}

.ro-Visual-tooltip {
  display: none;
}

@media (min-width: 1280px) {
  .ro-Visual-tooltip {
    display: block;
  }
}

.ro-Circle {
  width: 256px;
  height: 256px;
  position: absolute;
  top: 251px;
  right: 9px;
  z-index: -1;
}

.ro-Circle [class^='ro-Circle-shape'] {
  position: absolute !important;
  border-radius: 50%;
}

@media (min-width: 1280px) {
  .ro-Circle {
    display: none;
  }
}

.ro-Circle-shape {
  width: 256px;
  height: 256px;
  left: 0 !important;
  top: 0 !important;
  background: #FF91AF;
  z-index: -2;
  -webkit-filter: blur(2px);
          filter: blur(2px);
}

.ro-Circle-shapeBorder {
  width: 256px;
  height: 256px;
  -webkit-filter: hue-rotate(10deg);
          filter: hue-rotate(10deg);
}

.ro-Circle--2 {
  width: 236px;
  height: 236px;
  top: 407px;
  right: -35px;
}

.ro-Circle--2 [class^='ro-Circle-shape'] {
  width: 236px;
  height: 236px;
  background-color: #fdff91;
}

.ro-Circle--3 {
  top: 571px;
  right: auto;
  left: 25px;
}

.ro-Circle--3 [class^='ro-Circle-shape'] {
  background-color: #9391ff;
}

.ro-Grid {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -2;
  opacity: 0;
  transition: opacity .8s ease-in-out;
}

.ro-Grid--rows .ro-Grid-holder {
  display: -ms-grid;
  display: grid;
  -ms-grid-rows: (14px)[170];
      grid-template-rows: repeat(170, 14px);
}

@media (min-width: 1886px) {
  .ro-Grid--rows .ro-Grid-holder {
    -ms-grid-rows: (14px)[100];
        grid-template-rows: repeat(100, 14px);
  }
}

.ro-Grid--rows .ro-Grid-holder .ro-Grid-item {
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.ro-Grid--columns {
  max-width: 1818px;
  margin: 0 auto;
  position: fixed;
  z-index: -3;
}

@media (min-width: 753px) {
  .ro-Grid--columns {
    width: 1818px;
    padding: 0 12px;
  }
}

@media (min-width: 1530px) {
  .ro-Grid--columns {
    padding: 0 40px;
  }
}

.ro-Grid--columns .ro-Grid-holder {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[3];
      grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 15px;
  padding: 0 15px;
}

@media (min-width: 480px) {
  .ro-Grid--columns .ro-Grid-holder {
    -ms-grid-columns: (1fr)[4];
        grid-template-columns: repeat(4, 1fr);
  }
}

@media (min-width: 753px) {
  .ro-Grid--columns .ro-Grid-holder {
    -ms-grid-columns: (1fr)[15];
        grid-template-columns: repeat(15, 1fr);
    padding: 0;
    grid-column-gap: 30px;
  }
}

.ro-Grid--columns .ro-Grid-holder, .ro-Grid--columns .ro-Grid-holder .ro-Grid-item {
  height: 100vh;
}

.ro-Grid--columns .ro-Grid-holder .ro-Grid-item {
  background-color: rgba(0, 0, 0, 0.03);
}

.is-scrolling .ro-Grid {
  opacity: 1;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
